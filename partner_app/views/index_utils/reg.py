from django.shortcuts import redirect
from django.contrib.auth import login, authenticate
from django.contrib import messages
from django.db.utils import IntegrityError

from partner_app.forms import PartnerRegistrationForm, AdvertiserRegistrationForm
from partner_app.utils import send_email_via_mailru

def handle_registration(request, user_type):
    form_class = PartnerRegistrationForm if user_type == "partner" else AdvertiserRegistrationForm
    form = form_class(request.POST or None)

    if form.is_valid():
        try:
            user = form.save()
            raw_password = form.cleaned_data.get('password1')
            authenticated_user = authenticate(request, email=user.email, password=raw_password)
            if authenticated_user:
                login(request, authenticated_user)
                if user_type == "partner":
                    send_email_via_mailru(user.email,'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –Ω–∞—à–µ–π –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø—Ä–æ–¥–≤–∏–≥–∞—è –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π.','üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É LinkOffer!')
                elif user_type == "advertiser":
                    send_email_via_mailru(user.email,'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –Ω–∞—à–µ–π –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.','üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É LinkOffer!')
                return redirect('dashboard')
            else:
                messages.error(request, message="–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.", extra_tags=f"reg_error_{user_type}")
        except IntegrityError as e:
            messages.error(request, message="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email –∏–ª–∏ –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç", extra_tags=f"reg_error_{user_type}")
        except Exception as e:
            messages.error(request, message=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {str(e)}", extra_tags=f"reg_error_{user_type}")
    else:
        for field, errors in form.errors.items():
            for error in errors:
                if field == 'email':
                    if 'already exists' in error.lower():
                        messages.error(request, message="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", extra_tags=f"reg_error_{user_type}")
                    else:
                        messages.error(request, message=error, extra_tags=f"reg_error_{user_type}")
                elif field == 'username':
                    messages.error(request, message=error, extra_tags=f"reg_error_{user_type}")
                elif field in ['password1', 'password2']:
                    if 'too short' in error.lower():
                        messages.error(request, message="–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤", extra_tags=f"reg_error_{user_type}")
                    elif 'too common' in error.lower():
                        messages.error(request, message="–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –ø—Ä–æ—Å—Ç–æ–π", extra_tags=f"reg_error_{user_type}")
                    elif 'mismatch' in error.lower():
                        messages.error(request, message="–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç", extra_tags=f"reg_error_{user_type}")
                    else:
                        messages.error(request, message=error, extra_tags=f"reg_error_{user_type}")
                else:
                    messages.error(request, message=error, extra_tags=f"reg_error_{user_type}")
    
    return redirect(f'/?show_modal={user_type}')
