# Generated by Django 5.1.6 on 2025-10-06 14:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('partner_app', '0111_migrate_partnerships'),
    ]

    operations = [
        migrations.AlterField(
            model_name='advertiserprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='partner_app.user'),
        ),
        migrations.AlterField(
            model_name='advertiserrequisites',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='partner_app.user'),
        ),
        migrations.AlterField(
            model_name='managerprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='partner_app.user'),
        ),
        migrations.AlterField(
            model_name='partnerlink',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_links', to='partner_app.user', verbose_name='Партнёр'),
        ),
        migrations.AlterField(
            model_name='partnerpayoutsettings',
            name='partner',
            field=models.OneToOneField(limit_choices_to={'user_type': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='payout_settings', to='partner_app.user', verbose_name='Партнёр'),
        ),
        migrations.AlterField(
            model_name='partnerprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner_profile', to='partner_app.user', verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='partnertransaction',
            name='partner',
            field=models.ForeignKey(limit_choices_to={'user_type': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='partner_app.user', verbose_name='Получатель'),
        ),
        migrations.AlterField(
            model_name='platform',
            name='partner',
            field=models.ForeignKey(limit_choices_to={'user_type': 'partner'}, on_delete=django.db.models.deletion.CASCADE, related_name='owned_platforms', to='partner_app.user', verbose_name='Партнёр'),
        ),
        migrations.AlterField(
            model_name='project',
            name='advertiser',
            field=models.ForeignKey(limit_choices_to={'user_type': 'advertiser'}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_projects', to='partner_app.user', verbose_name='Рекламодатель'),
        ),
        migrations.AlterField(
            model_name='project',
            name='partners',
            field=models.ManyToManyField(blank=True, limit_choices_to={'user_type': 'partner'}, related_name='participating_projects', through='partner_app.ProjectPartner', to='partner_app.user', verbose_name='Партнёры проекта'),
        ),
        migrations.AlterField(
            model_name='projectpartner',
            name='advertiser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_owner', to='partner_app.user', verbose_name='Рекламодатель'),
        ),
        migrations.AlterField(
            model_name='projectpartner',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to='partner_app.user', verbose_name='Партнёр'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='partner_user_set', related_query_name='partner_user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='partner_user_set', related_query_name='partner_user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
